# Tox (http://codespeak.net/~hpk/tox/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist =
    # AWS Lambda
    # The aws_lambda tests deploy to the real AWS and have their own
    # matrix of Python versions to run the test lambda function in.
    # see `lambda_runtime` fixture in tests/integrations/aws_lambda.py
    {py3.9}-aws_lambda

[testenv]
deps =
    # if you change test-requirements.txt and your change is not being reflected
    # in what's installed by tox (when running tox locally), try running tox
    # with the -r flag
    -r test-requirements.txt

    # AWS Lambda
    aws_lambda: boto3

setenv =
    PYTHONDONTWRITEBYTECODE=1
    aws_lambda: TESTPATH=tests/integrations/aws_lambda

    COVERAGE_FILE=.coverage-{envname}
passenv =
    SENTRY_PYTHON_TEST_AWS_ACCESS_KEY_ID
    SENTRY_PYTHON_TEST_AWS_SECRET_ACCESS_KEY
    SENTRY_PYTHON_TEST_POSTGRES_USER
    SENTRY_PYTHON_TEST_POSTGRES_PASSWORD
    SENTRY_PYTHON_TEST_POSTGRES_NAME
    SENTRY_PYTHON_TEST_POSTGRES_HOST
usedevelop = True
extras =
    bottle: bottle
    falcon: falcon
    flask: flask
    pymongo: pymongo

basepython =
    py2.7: python2.7
    py3.5: python3.5
    py3.6: python3.6
    py3.7: python3.7
    py3.8: python3.8
    py3.9: python3.9
    py3.10: python3.10
    py3.11: python3.11
    py3.12: python3.12

    # Python version is pinned here because flake8 actually behaves differently
    # depending on which version is used. You can patch this out to point to
    # some random Python 3 binary, but then you get guaranteed mismatches with
    # CI. Other tools such as mypy and black have options that pin the Python
    # version.
    linters: python3.12

commands =
    {py3.7,py3.8}-boto3: pip install urllib3<2.0.0

    ; Running `py.test` as an executable suffers from an import error
    ; when loading tests in scenarios. In particular, django fails to
    ; load the settings from the test module.
    {py2.7}: python -m pytest --ignore-glob='*py3.py' -rsx -s --durations=5 -vvv {env:TESTPATH} {posargs}
    {py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11,py3.12}: python -m pytest -rsx -s --durations=5 -vvv {env:TESTPATH} {posargs}

[testenv:linters]
commands =
    flake8 tests sentry_sdk
    black --check tests sentry_sdk
    mypy sentry_sdk
