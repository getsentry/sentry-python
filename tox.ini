# Tox (http://codespeak.net/~hpk/tox/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist =
    # === Common ===
    {py2.7,py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-common

    # === Integrations ===
    # General format is {pythonversion}-{integrationname}-v{frameworkversion}
    # 1 blank line between different integrations
    # Each framework version should only be mentioned once. I.e:
    #   {py3.7,py3.10}-django-v{3.2}
    #   {py3.10}-django-v{4.0}
    # instead of:
    #   {py3.7}-django-v{3.2}
    #   {py3.7,py3.10}-django-v{3.2,4.0}

    # AIOHTTP
    {py3.7}-aiohttp-v{3.5}
    {py3.7,py3.8,py3.9,py3.10,py3.11}-aiohttp-v{3.6}

    # Arq
    {py3.7,py3.8,py3.9,py3.10,py3.11}-arq

    # Asgi
    {py3.7,py3.8,py3.9,py3.10,py3.11}-asgi

    # asyncpg
    {py3.7,py3.8,py3.9,py3.10,py3.11}-asyncpg

    # AWS Lambda
    # The aws_lambda tests deploy to the real AWS and have their own matrix of Python versions.
    {py3.7}-aws_lambda

    # Beam
    {py3.7}-beam-v{2.12,2.13,2.32,2.33}

    # Boto3
    {py2.7,py3.6,py3.7,py3.8}-boto3-v{1.9,1.10,1.11,1.12,1.13,1.14,1.15,1.16}

    # Bottle
    {py2.7,py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-bottle-v{0.12}

    # Celery
    {py2.7}-celery-v{3}
    {py2.7,py3.5,py3.6}-celery-v{4.1,4.2}
    {py2.7,py3.5,py3.6,py3.7,py3.8}-celery-v{4.3,4.4}
    {py3.6,py3.7,py3.8}-celery-v{5.0}
    {py3.7,py3.8,py3.9,py3.10}-celery-v{5.1,5.2}
    # TODO: enable when celery is ready {py3.7,py3.8,py3.9,py3.10,py3.11}-celery-v{5.3}

    # Chalice
    {py3.6,py3.7,py3.8}-chalice-v{1.18,1.20,1.22,1.24}

    # Clickhouse Driver
    {py3.8,py3.9,py3.10,py3.11}-clickhouse_driver-v{0.2.4,0.2.5,0.2.6}

    # Cloud Resource Context
    {py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-cloud_resource_context

    # Django
    # - Django 1.x
    {py2.7,py3.5}-django-v{1.8,1.9,1.10}
    {py2.7,py3.5,py3.6,py3.7}-django-v{1.11}
    # - Django 2.x
    {py3.5,py3.6,py3.7}-django-v{2.0,2.1}
    {py3.5,py3.6,py3.7,py3.8,py3.9}-django-v{2.2}
    # - Django 3.x
    {py3.6,py3.7,py3.8,py3.9}-django-v{3.0,3.1}
    {py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-django-v{3.2}
    # - Django 4.x
    {py3.8,py3.9,py3.10,py3.11}-django-v{4.0,4.1}

    # Falcon
    {py2.7,py3.5,py3.6,py3.7}-falcon-v{1.4}
    {py2.7,py3.5,py3.6,py3.7}-falcon-v{2.0}
    {py3.5,py3.6,py3.7,py3.8,py3.9}-falcon-v{3.0}

    # FastAPI
    {py3.7,py3.8,py3.9,py3.10,py3.11}-fastapi

    # Flask
    {py2.7,py3.5,py3.6,py3.7,py3.8,py3.9}-flask-v{0.11,0.12,1.0}
    {py2.7,py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-flask-v{1.1}
    {py3.6,py3.8,py3.9,py3.10,py3.11}-flask-v{2.0}

    # Gevent
    {py2.7,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-gevent

    # GCP
    {py3.7}-gcp

    # Grpc
    {py3.7,py3.8,py3.9,py3.10}-grpc-v{1.40,1.44,1.48}
    {py3.7,py3.8,py3.9,py3.10,py3.11}-grpc-v{1.54,1.56,1.58}

    # HTTPX
    {py3.6,py3.7,py3.8,py3.9}-httpx-v{0.16,0.17,0.18}
    {py3.6,py3.7,py3.8,py3.9,py3.10}-httpx-v{0.19,0.20,0.21,0.22}
    {py3.7,py3.8,py3.9,py3.10,py3.11}-httpx-v{0.23}

    # Huey
    {py2.7,py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-huey-2

    # Loguru
    {py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-loguru-v{0.5,0.6,0.7}

    # OpenTelemetry (OTel)
    {py3.7,py3.8,py3.9,py3.10,py3.11}-opentelemetry

    # pure_eval
    {py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-pure_eval

    # PyMongo (Mongo DB)
    {py2.7,py3.6}-pymongo-v{3.1}
    {py2.7,py3.6,py3.7,py3.8,py3.9}-pymongo-v{3.12}
    {py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-pymongo-v{4.0}
    {py3.7,py3.8,py3.9,py3.10,py3.11}-pymongo-v{4.1,4.2}

    # Pyramid
    {py2.7,py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-pyramid-v{1.6,1.7,1.8,1.9,1.10}

    # Quart
    {py3.7,py3.8,py3.9,py3.10,py3.11}-quart-v{0.16,0.17,0.18}

    # Redis
    {py2.7,py3.7,py3.8,py3.9,py3.10,py3.11}-redis

    # Redis Cluster
    {py2.7,py3.7,py3.8,py3.9}-rediscluster-v{1,2.1.0,2}

    # Requests
    {py2.7,py3.8,py3.9}-requests

    # RQ (Redis Queue)
    {py2.7,py3.5,py3.6}-rq-v{0.6,0.7,0.8,0.9,0.10,0.11}
    {py2.7,py3.5,py3.6,py3.7,py3.8,py3.9}-rq-v{0.12,0.13,1.0,1.1,1.2,1.3}
    {py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-rq-v{1.4,1.5}

    # Sanic
    {py3.5,py3.6,py3.7}-sanic-v{0.8,18}
    {py3.6,py3.7}-sanic-v{19}
    {py3.6,py3.7,py3.8}-sanic-v{20}
    {py3.7,py3.8,py3.9,py3.10,py3.11}-sanic-v{21}
    {py3.7,py3.8,py3.9,py3.10,py3.11}-sanic-v{22}

    # Starlette
    {py3.7,py3.8,py3.9,py3.10,py3.11}-starlette-v{0.20,0.22,0.24,0.26,0.28}

    # Starlite
    {py3.8,py3.9,py3.10,py3.11}-starlite

    # SQL Alchemy
    {py2.7,py3.7,py3.8,py3.9,py3.10,py3.11}-sqlalchemy-v{1.2,1.3,1.4}
    {py3.7,py3.8,py3.9,py3.10,py3.11}-sqlalchemy-v{2.0}

    # Tornado
    {py3.7,py3.8,py3.9}-tornado-v{5}
    {py3.7,py3.8,py3.9,py3.10,py3.11}-tornado-v{6}

    # Trytond
    {py3.5,py3.6,py3.7,py3.8,py3.9}-trytond-v{4.6,5.0,5.2}
    {py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-trytond-v{5.4}

[testenv]
deps =
    # if you change test-requirements.txt and your change is not being reflected
    # in what's installed by tox (when running tox locally), try running tox
    # with the -r flag
    -r test-requirements.txt

    py3.8-common: hypothesis

    linters: -r linter-requirements.txt
    linters: werkzeug<2.3.0

    # Common
    {py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-common: pytest-asyncio

    # AIOHTTP
    aiohttp-v3.4: aiohttp>=3.4.0,<3.5.0
    aiohttp-v3.5: aiohttp>=3.5.0,<3.6.0
    aiohttp: pytest-aiohttp

    # Arq
    arq: arq>=0.23.0
    arq: fakeredis>=2.2.0,<2.8
    arq: pytest-asyncio
    arq: async-timeout

    # Asgi
    asgi: pytest-asyncio
    asgi: async-asgi-testclient

    # Asyncpg
    asyncpg: pytest-asyncio
    asyncpg: asyncpg

    # AWS Lambda
    aws_lambda: boto3

    # Beam
    beam-v2.12: apache-beam>=2.12.0, <2.13.0
    beam-v2.13: apache-beam>=2.13.0, <2.14.0
    beam-v2.32: apache-beam>=2.32.0, <2.33.0
    beam-v2.33: apache-beam>=2.33.0, <2.34.0
    beam-master: git+https://github.com/apache/beam#egg=apache-beam&subdirectory=sdks/python

    # Boto3
    boto3-v1.9: boto3>=1.9,<1.10
    boto3-v1.10: boto3>=1.10,<1.11
    boto3-v1.11: boto3>=1.11,<1.12
    boto3-v1.12: boto3>=1.12,<1.13
    boto3-v1.13: boto3>=1.13,<1.14
    boto3-v1.14: boto3>=1.14,<1.15
    boto3-v1.15: boto3>=1.15,<1.16
    boto3-v1.16: boto3>=1.16,<1.17

    # Bottle
    bottle: Werkzeug<2.1.0
    bottle-v0.12: bottle>=0.12,<0.13

    # Celery
    celery: redis
    celery-v3: Celery>=3.1,<4.0
    celery-v4.1: Celery>=4.1,<4.2
    celery-v4.2: Celery>=4.2,<4.3
    celery-v4.3: Celery>=4.3,<4.4
    # https://github.com/celery/vine/pull/29#issuecomment-689498382
    celery-4.3: vine<5.0.0
    # https://github.com/celery/celery/issues/6153
    celery-v4.4: Celery>=4.4,<4.5,!=4.4.4
    celery-v5.0: Celery>=5.0,<5.1
    celery-v5.1: Celery>=5.1,<5.2
    celery-v5.2: Celery>=5.2,<5.3

    {py3.5}-celery: newrelic<6.0.0
    {py3.7}-celery: importlib-metadata<5.0
    {py2.7,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-celery: newrelic

    # Chalice
    chalice-v1.18: chalice>=1.18.0,<1.19.0
    chalice-v1.20: chalice>=1.20.0,<1.21.0
    chalice-v1.22: chalice>=1.22.0,<1.23.0
    chalice-v1.24: chalice>=1.24.0,<1.25.0
    chalice: pytest-chalice==0.0.5

    {py3.7}-chalice: botocore~=1.31
    {py3.8}-chalice: botocore~=1.31

    # Clickhouse Driver
    clickhouse_driver-v0.2.4: clickhouse_driver>=0.2.4,<0.2.5
    clickhouse_driver-v0.2.5: clickhouse_driver>=0.2.5,<0.2.6
    clickhouse_driver-v0.2.6: clickhouse_driver>=0.2.6,<0.2.7

    # Django
    django: psycopg2-binary
    django: Werkzeug<2.1.0
    django-v{1.11,2.0,2.1,2.2,3.0,3.1,3.2}: djangorestframework>=3.0.0,<4.0.0

    {py3.7,py3.8,py3.9,py3.10,py3.11}-django-v{1.11,2.0,2.1,2.2,3.0,3.1,3.2}: pytest-asyncio
    {py3.7,py3.8,py3.9,py3.10,py3.11}-django-v{1.11,2.0,2.1,2.2,3.0,3.1,3.2}: channels[daphne]>2

    django-v{1.8,1.9,1.10,1.11,2.0,2.1}: pytest-django<4.0
    django-v{2.2,3.0,3.1,3.2}: pytest-django>=4.0
    django-v{2.2,3.0,3.1,3.2}: Werkzeug<2.0

    django-v{4.0,4.1}: djangorestframework
    django-v{4.0,4.1}: pytest-asyncio
    django-v{4.0,4.1}: pytest-django
    django-v{4.0,4.1}: Werkzeug

    django-v1.8: Django>=1.8,<1.9
    django-v1.9: Django>=1.9,<1.10
    django-v1.10: Django>=1.10,<1.11
    django-v1.11: Django>=1.11,<1.12
    django-v2.0: Django>=2.0,<2.1
    django-v2.1: Django>=2.1,<2.2
    django-v2.2: Django>=2.2,<2.3
    django-v3.0: Django>=3.0,<3.1
    django-v3.1: Django>=3.1,<3.2
    django-v3.2: Django>=3.2,<3.3
    django-v4.0: Django>=4.0,<4.1
    django-v4.1: Django>=4.1,<4.2

    # Falcon
    falcon-v1.4: falcon>=1.4,<1.5
    falcon-v2.0: falcon>=2.0.0rc3,<3.0
    falcon-v3.0: falcon>=3.0.0,<3.1.0

    # FastAPI
    fastapi: fastapi
    fastapi: httpx
    fastapi: anyio<4.0.0 # thats a dep of httpx
    fastapi: pytest-asyncio
    fastapi: python-multipart
    fastapi: requests

    # Flask
    flask: flask-login
    flask: Werkzeug<2.1.0
    flask-v0.11: Flask>=0.11,<0.12
    flask-v0.12: Flask>=0.12,<0.13
    flask-v1.0: Flask>=1.0,<1.1
    flask-v1.1: Flask>=1.1,<1.2
    flask-v2.0: Flask>=2.0,<2.1

    # Gevent
    # See http://www.gevent.org/install.html#older-versions-of-python
    # for justification of the versions pinned below
    py3.5-gevent: gevent==20.9.0
    # See https://stackoverflow.com/questions/51496550/runtime-warning-greenlet-greenlet-size-changed
    # for justification why greenlet is pinned here
    py3.5-gevent: greenlet==0.4.17
    {py2.7,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-gevent: gevent>=22.10.0, <22.11.0

    # Grpc
    grpc-v1.40: grpcio-tools>=1.40.0,<1.41.0
    grpc-v1.44: grpcio-tools>=1.44.0,<1.45.0
    grpc-v1.48: grpcio-tools>=1.48.0,<1.49.0
    grpc-v1.54: grpcio-tools>=1.54.0,<1.55.0
    grpc-v1.56: grpcio-tools>=1.56.0,<1.57.0
    grpc-v1.58: grpcio-tools>=1.58.0,<1.59.0
    grpc: protobuf
    grpc: mypy-protobuf
    grpc: types-protobuf

    # HTTPX
    httpx: pytest-httpx
    httpx: anyio<4.0.0 # thats a dep of httpx
    httpx-v0.16: httpx>=0.16,<0.17
    httpx-v0.17: httpx>=0.17,<0.18
    httpx-v0.18: httpx>=0.18,<0.19
    httpx-v0.19: httpx>=0.19,<0.20
    httpx-v0.20: httpx>=0.20,<0.21
    httpx-v0.21: httpx>=0.21,<0.22
    httpx-v0.22: httpx>=0.22,<0.23
    httpx-v0.23: httpx>=0.23,<0.24

    # Huey
    huey-2: huey>=2.0

    # Loguru
    loguru-v0.5: loguru>=0.5.0,<0.6.0
    loguru-v0.6: loguru>=0.6.0,<0.7.0
    loguru-v0.7: loguru>=0.7.0,<0.8.0

    # OpenTelemetry (OTel)
    opentelemetry: opentelemetry-distro

    # pure_eval
    pure_eval: pure_eval

    # PyMongo (MongoDB)
    pymongo: mockupdb
    pymongo-v3.1: pymongo>=3.1,<3.2
    pymongo-v3.12: pymongo>=3.12,<4.0
    pymongo-v4.0: pymongo>=4.0,<4.1
    pymongo-v4.1: pymongo>=4.1,<4.2
    pymongo-v4.2: pymongo>=4.2,<4.3

    # Pyramid
    pyramid: Werkzeug<2.1.0
    pyramid-v1.6: pyramid>=1.6,<1.7
    pyramid-v1.7: pyramid>=1.7,<1.8
    pyramid-v1.8: pyramid>=1.8,<1.9
    pyramid-v1.9: pyramid>=1.9,<1.10
    pyramid-v1.10: pyramid>=1.10,<1.11

    # Quart
    quart: quart-auth
    quart: pytest-asyncio
    quart-v0.16: blinker<1.6
    quart-v0.16: jinja2<3.1.0
    quart-v0.16: Werkzeug<2.1.0
    quart-v0.17: blinker<1.6
    quart-v0.16: quart>=0.16.1,<0.17.0
    quart-v0.17: quart>=0.17.0,<0.18.0
    quart-v0.18: quart>=0.18.0,<0.19.0

    # Requests
    requests: requests>=2.0

    # Redis
    redis: fakeredis!=1.7.4
    {py3.7,py3.8,py3.9,py3.10,py3.11}-redis: pytest-asyncio

    # Redis Cluster
    rediscluster-v1: redis-py-cluster>=1.0.0,<2.0.0
    rediscluster-v2.1.0: redis-py-cluster>=2.0.0,<2.1.1
    rediscluster-v2: redis-py-cluster>=2.1.1,<3.0.0

    # RQ (Redis Queue)
    # https://github.com/jamesls/fakeredis/issues/245
    rq-v{0.6,0.7,0.8,0.9,0.10,0.11,0.12}: fakeredis<1.0
    rq-v{0.6,0.7,0.8,0.9,0.10,0.11,0.12}: redis<3.2.2
    rq-v{0.13,1.0,1.1,1.2,1.3,1.4,1.5}: fakeredis>=1.0,<1.7.4

    rq-v0.6: rq>=0.6,<0.7
    rq-v0.7: rq>=0.7,<0.8
    rq-v0.8: rq>=0.8,<0.9
    rq-v0.9: rq>=0.9,<0.10
    rq-v0.10: rq>=0.10,<0.11
    rq-v0.11: rq>=0.11,<0.12
    rq-v0.12: rq>=0.12,<0.13
    rq-v0.13: rq>=0.13,<0.14
    rq-v1.0: rq>=1.0,<1.1
    rq-v1.1: rq>=1.1,<1.2
    rq-v1.2: rq>=1.2,<1.3
    rq-v1.3: rq>=1.3,<1.4
    rq-v1.4: rq>=1.4,<1.5
    rq-v1.5: rq>=1.5,<1.6

    # Sanic
    sanic-v0.8: sanic>=0.8,<0.9
    sanic-v18: sanic>=18.0,<19.0
    sanic-v19: sanic>=19.0,<20.0
    sanic-v20: sanic>=20.0,<21.0
    sanic-v21: sanic>=21.0,<22.0
    sanic-v22: sanic>=22.0,<22.9.0

    sanic: websockets<11.0
    sanic: aiohttp
    sanic-v21: sanic_testing<22
    sanic-v22: sanic_testing<22.9.0
    {py3.5,py3.6}-sanic: aiocontextvars==0.2.1
    {py3.5}-sanic: ujson<4

    # Starlette
    starlette: pytest-asyncio
    starlette: python-multipart
    starlette: requests
    starlette: httpx
    starlette: anyio<4.0.0 # thats a dep of httpx
    starlette: jinja2
    starlette-v0.20: starlette>=0.20.0,<0.21.0
    starlette-v0.22: starlette>=0.22.0,<0.23.0
    starlette-v0.24: starlette>=0.24.0,<0.25.0
    starlette-v0.26: starlette>=0.26.0,<0.27.0
    starlette-v0.28: starlette>=0.28.0,<0.29.0

    # Starlite
    starlite: pytest-asyncio
    starlite: python-multipart
    starlite: requests
    starlite: cryptography
    starlite: pydantic<2.0.0
    starlite: starlite
    {py3.8,py3.9}-starlite: typing-extensions==4.5.0  # this is used by pydantic, which is used by starlite. When the problem is fixed in here or pydantic, this can be removed

    # SQLAlchemy
    sqlalchemy-v1.2: sqlalchemy>=1.2,<1.3
    sqlalchemy-v1.3: sqlalchemy>=1.3,<1.4
    sqlalchemy-v1.4: sqlalchemy>=1.4,<2.0
    sqlalchemy-v2.0: sqlalchemy>=2.0,<2.1

    # Tornado
    tornado-v5: tornado>=5,<6
    tornado-v6: tornado>=6.0a1

    # Trytond
    trytond-v5.4: trytond>=5.4,<5.5
    trytond-v5.2: trytond>=5.2,<5.3
    trytond-v5.0: trytond>=5.0,<5.1
    trytond-v4.6: trytond>=4.6,<4.7

    trytond-v{4.6,4.8,5.0,5.2,5.4}: werkzeug<2.0

setenv =
    PYTHONDONTWRITEBYTECODE=1
    common: TESTPATH=tests
    aiohttp: TESTPATH=tests/integrations/aiohttp
    arq: TESTPATH=tests/integrations/arq
    asgi: TESTPATH=tests/integrations/asgi
    asyncpg: TESTPATH=tests/integrations/asyncpg
    aws_lambda: TESTPATH=tests/integrations/aws_lambda
    beam: TESTPATH=tests/integrations/beam
    boto3: TESTPATH=tests/integrations/boto3
    bottle: TESTPATH=tests/integrations/bottle
    celery: TESTPATH=tests/integrations/celery
    chalice: TESTPATH=tests/integrations/chalice
    clickhouse_driver: TESTPATH=tests/integrations/clickhouse_driver
    cloud_resource_context: TESTPATH=tests/integrations/cloud_resource_context
    django: TESTPATH=tests/integrations/django
    falcon: TESTPATH=tests/integrations/falcon
    fastapi:  TESTPATH=tests/integrations/fastapi
    flask: TESTPATH=tests/integrations/flask
    # run all tests with gevent
    gevent: TESTPATH=tests
    gcp: TESTPATH=tests/integrations/gcp
    httpx: TESTPATH=tests/integrations/httpx
    huey: TESTPATH=tests/integrations/huey
    loguru: TESTPATH=tests/integrations/loguru
    opentelemetry: TESTPATH=tests/integrations/opentelemetry
    pure_eval: TESTPATH=tests/integrations/pure_eval
    pymongo: TESTPATH=tests/integrations/pymongo
    pyramid: TESTPATH=tests/integrations/pyramid
    quart: TESTPATH=tests/integrations/quart
    redis: TESTPATH=tests/integrations/redis
    rediscluster: TESTPATH=tests/integrations/rediscluster
    requests: TESTPATH=tests/integrations/requests
    rq: TESTPATH=tests/integrations/rq
    sanic: TESTPATH=tests/integrations/sanic
    starlette: TESTPATH=tests/integrations/starlette
    starlite: TESTPATH=tests/integrations/starlite
    sqlalchemy: TESTPATH=tests/integrations/sqlalchemy
    tornado: TESTPATH=tests/integrations/tornado
    trytond: TESTPATH=tests/integrations/trytond
    socket: TESTPATH=tests/integrations/socket
    grpc: TESTPATH=tests/integrations/grpc

    COVERAGE_FILE=.coverage-{envname}
passenv =
    SENTRY_PYTHON_TEST_AWS_ACCESS_KEY_ID
    SENTRY_PYTHON_TEST_AWS_SECRET_ACCESS_KEY
    SENTRY_PYTHON_TEST_AWS_IAM_ROLE
    SENTRY_PYTHON_TEST_POSTGRES_USER
    SENTRY_PYTHON_TEST_POSTGRES_PASSWORD
    SENTRY_PYTHON_TEST_POSTGRES_NAME
    SENTRY_PYTHON_TEST_POSTGRES_HOST
usedevelop = True
extras =
    bottle: bottle
    falcon: falcon
    flask: flask
    pymongo: pymongo

basepython =
    py2.7: python2.7
    py3.5: python3.5
    py3.6: python3.6
    py3.7: python3.7
    py3.8: python3.8
    py3.9: python3.9
    py3.10: python3.10
    py3.11: python3.11

    # Python version is pinned here because flake8 actually behaves differently
    # depending on which version is used. You can patch this out to point to
    # some random Python 3 binary, but then you get guaranteed mismatches with
    # CI. Other tools such as mypy and black have options that pin the Python
    # version.
    linters: python3.11

commands =
    {py3.7,py3.8}-boto3: pip install urllib3<2.0.0

    ; https://github.com/pytest-dev/pytest/issues/5532
    {py3.5,py3.6,py3.7,py3.8,py3.9}-flask-v{0.11,0.12}: pip install pytest<5
    {py3.6,py3.7,py3.8,py3.9}-flask-v{0.11}: pip install Werkzeug<2
    ; https://github.com/pallets/flask/issues/4455
    {py3.7,py3.8,py3.9,py3.10,py3.11}-flask-v{0.11,0.12,1.0,1.1}: pip install "itsdangerous>=0.24,<2.0" "markupsafe<2.0.0" "jinja2<3.1.1"
    ; https://github.com/more-itertools/more-itertools/issues/578
    py3.5-flask-v{0.11,0.12}: pip install more-itertools<8.11.0

    ; use old pytest for old Python versions:
    {py2.7,py3.5}: pip install pytest-forked==1.1.3

    ; Running `py.test` as an executable suffers from an import error
    ; when loading tests in scenarios. In particular, django fails to
    ; load the settings from the test module.
    {py2.7}: python -m pytest --ignore-glob='*py3.py' -rsx -s --durations=5 -vvv {env:TESTPATH} {posargs}
    {py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}: python -m pytest -rsx -s --durations=5 -vvv {env:TESTPATH} {posargs}

[testenv:linters]
commands =
    flake8 tests sentry_sdk
    black --check tests sentry_sdk
    mypy sentry_sdk
