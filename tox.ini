# Tox (http://codespeak.net/~hpk/tox/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist =
    # core
    py{2.7,3.4,3.5,3.6,3.7,3.8}
    pypy

    # integrations
    {py3.5,py3.6,py3.7}-django-{2.0,2.1,dev}
    {pypy,py2.7,py3.5}-django-1.11
    {pypy,py2.7,py3.4,py3.5}-django-{1.8,1.9,1.10}
    {pypy,py2.7,py3.4,py3.5}-django-1.8
    {pypy,py2.7,py3.4}-django-1.7
    {pypy,py2.7}-django-1.6

    {pypy,py2.7,py3.5,py3.6,py3.7,py3.8}-flask-{1.0,0.11,0.12,dev}

    {py3.7,py3.8}-sanic-0.8

    {pypy,py2.7,py3.5,py3.6,py3.7,py3.8}-celery-4
    {pypy,py2.7}-celery-3

    {py2.7,py3.7}-requests

    py3.7-aws_lambda

    {pypy,py2.7,py3.5,py3.6,py3.7,py3.8}-pyramid-{1.3,1.4,1.5,1.6,1.7,1.8,1.9}

[testenv]
deps =
    -r test-requirements.txt

    django-{1.6,1.7,1.8}: pytest-django<3.0
    django-{1.9,1.10,1.11,2.0,2.1,dev}: pytest-django>=3.0
    django-1.6: Django>=1.6,<1.7
    django-1.7: Django>=1.7,<1.8
    django-1.8: Django>=1.8,<1.9
    django-1.9: Django>=1.9,<1.10
    django-1.10: Django>=1.10,<1.11
    django-1.11: Django>=1.11,<1.12
    django-2.0: Django>=2.0,<2.1
    django-2.1: Django>=2.0,<2.1
    django-dev: git+https://github.com/django/django.git#egg=Django

    flask: flask-login
    flask-0.11: Flask>=0.11,<0.12
    flask-0.12: Flask>=0.12,<0.13
    flask-1.0: Flask>=0.10,<0.11
    flask-dev: git+https://github.com/pallets/flask.git#egg=flask

    sanic-0.8: sanic>=0.8,<0.9
    sanic: aiohttp

    celery-3: Celery>=3.1,<4.0
    celery-4: Celery>=4.0,<5.0

    requests: requests>=2.0

    aws_lambda: boto3

    pyramid-1.3: pyramid>=1.3,<1.4
    pyramid-1.4: pyramid>=1.4,<1.5
    pyramid-1.5: pyramid>=1.5,<1.6
    pyramid-1.6: pyramid>=1.6,<1.7
    pyramid-1.7: pyramid>=1.7,<1.8
    pyramid-1.8: pyramid>=1.8,<1.9
    pyramid-1.9: pyramid>=1.9,<1.10

    linters: black
    linters: flake8
setenv =
    PYTHONDONTWRITEBYTECODE=1
    TESTPATH=tests
    django: TESTPATH=tests/integrations/django
    flask: TESTPATH=tests/integrations/flask
    celery: TESTPATH=tests/integrations/celery
    requests: TESTPATH=tests/integrations/requests
    aws_lambda: TESTPATH=tests/integrations/aws_lambda
    sanic: TESTPATH=tests/integrations/sanic
    pyramid: TESTPATH=tests/integrations/pyramid
passenv =
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    AWS_IAM_ROLE
usedevelop = True
extras =
    flask: flask

basepython =
    py2.7: python2.7
    py3.4: python3.4
    py3.5: python3.5
    py3.6: python3.6
    py3.7: python3.7
    py3.8: python3.8
    linters: python3
    pypy: pypy

commands =
    py.test {env:TESTPATH} {posargs}

[testenv:linters]
commands =
    flake8 tests sentry_sdk
    black --check tests sentry_sdk
