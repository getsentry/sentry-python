#
# Tool: Coverage
#

[tool.coverage.run]
branch = true
omit = [
    "/tmp/*",
    "*/tests/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
]

#
# Tool: Pytest
#

[tool.pytest.ini_options]
addopts = "-vvv -rfEs -s --durations=5 --cov=./sentry_sdk --cov-branch --cov-report= --tb=short --junitxml=.junitxml"
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "tests_internal_exceptions: Handle internal exceptions just as the SDK does, to test it. (Otherwise internal exceptions are recorded and reraised.)",
]

[tool.pytest-watch]
verbose = true
nobeep = true

#
# Tool: Mypy
#

[tool.mypy]
allow_redefinition = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
python_version = "3.11"
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

# Relaxations for code written before mypy was introduced
# Do not use wildcards in module paths, otherwise added modules will
# automatically have the same set of relaxed rules as the rest
[[tool.mypy.overrides]]
module = "cohere.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "django.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyramid.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "psycopg2.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "anthropic.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sanic.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tornado.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fakeredis.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "rq.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyspark.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "asgiref.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "langchain_core.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "langchain.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "langgraph.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "google.genai.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "executing.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "asttokens.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pure_eval.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "blinker.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sentry_sdk._queue"
ignore_missing_imports = true
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "sentry_sdk._lru_cache"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "celery.app.trace"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "flask.signals"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "huey.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "openai.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "openfeature.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "huggingface_hub.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "arq.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "grpc.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "agents.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "dramatiq.*"
ignore_missing_imports = true

#
# Tool: Ruff (linting and formatting)
#

[tool.ruff]
# Target Python 3.7+ (minimum version supported by ruff)
target-version = "py37"

# Exclude files and directories
extend-exclude = [
    "*_pb2.py",     # Protocol Buffer files (covers all pb2 files including grpc_test_service_pb2.py)
    "*_pb2_grpc.py", # Protocol Buffer files (covers all pb2_grpc files including grpc_test_service_pb2_grpc.py)
    "checkouts",    # From flake8
    "lol*",         # From flake8
]

[tool.ruff.lint]
# Match flake8's default rule selection exactly
# Flake8 by default only enables E and W (pycodestyle) + F (pyflakes)
select = [
    "E",   # pycodestyle errors (same as flake8 default)
    "W",   # pycodestyle warnings (same as flake8 default)
    "F",   # Pyflakes (same as flake8 default)
    # Note: B and N rules are NOT enabled by default in flake8
    # They were only active through the plugins, which may not have been fully enabled
]

# Use ONLY the same ignores as the original flake8 config + compatibility for this codebase
ignore = [
    "E203", # Whitespace before ':'
    "E501", # Line too long
    "E402", # Module level import not at top of file
    "E731", # Do not assign a lambda expression, use a def
    "B014", # Redundant exception types
    "N812", # Lowercase imported as non-lowercase
    "N804", # First argument of classmethod should be named cls

    # Additional ignores for codebase compatibility
    "F401", # Unused imports - many in TYPE_CHECKING blocks used for type comments
    "E721", # Use isinstance instead of type() == - existing pattern in this codebase
]

[tool.ruff.format]
# ruff format already excludes the same files as specified in extend-exclude
# Ensure Python 3.7 compatibility - avoid using Python 3.9+ syntax features
skip-magic-trailing-comma = false
