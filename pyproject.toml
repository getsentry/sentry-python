#
# Tool: Black
#

[tool.black]
# 'extend-exclude' excludes files or directories in addition to the defaults
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
(
    .*_pb2.py  # exclude autogenerated Protocol Buffer files anywhere in the project
    | .*_pb2_grpc.py  # exclude autogenerated Protocol Buffer files anywhere in the project
)
'''


#
# Tool: Coverage
#

[tool.coverage.run]
branch = true
omit = [
    "/tmp/*",
    "*/tests/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
]

#
# Tool: Pytest
#

[tool.pytest.ini_options]
addopts = "-vvv -rfEs -s --durations=5 --cov=./sentry_sdk --cov-branch --cov-report= --tb=short --junitxml=.junitxml"
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "tests_internal_exceptions: Handle internal exceptions just as the SDK does, to test it. (Otherwise internal exceptions are recorded and reraised.)",
]

[tool.pytest-watch]
verbose = true
nobeep = true

#
# Tool: Mypy
#

[tool.mypy]
allow_redefinition = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
python_version = "3.11"
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

# Relaxations for code written before mypy was introduced
# Do not use wildcards in module paths, otherwise added modules will
# automatically have the same set of relaxed rules as the rest
[[tool.mypy.overrides]]
module = "cohere.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "django.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyramid.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "psycopg2.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "anthropic.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sanic.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tornado.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fakeredis.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "rq.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyspark.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "asgiref.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "langchain_core.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "executing.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "asttokens.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pure_eval.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "blinker.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sentry_sdk._queue"
ignore_missing_imports = true
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "sentry_sdk._lru_cache"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "celery.app.trace"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "flask.signals"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "huey.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "openai.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "openfeature.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "huggingface_hub.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "arq.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "grpc.*"
ignore_missing_imports = true

#
# Tool: Flake8
#

[tool.flake8]
extend-ignore = [
  # Handled by black (Whitespace before ':' -- handled by black)
  "E203",
  # Handled by black (Line too long)
  "E501",
  # Sometimes not possible due to execution order (Module level import is not at top of file)
  "E402",
  # I don't care (Do not assign a lambda expression, use a def)
  "E731",
  # does not apply to Python 2 (redundant exception types by flake8-bugbear)
  "B014",
  # I don't care (Lowercase imported as non-lowercase by pep8-naming)
  "N812",
  # is a worse version of and conflicts with B902 (first argument of a classmethod should be named cls)
  "N804",
]
extend-exclude = ["checkouts", "lol*"]
exclude = [
  # gRCP generated files
  "grpc_test_service_pb2.py",
  "grpc_test_service_pb2_grpc.py",
]
