# Do not edit this YAML file. This file is generated automatically by executing
# python scripts/split_tox_gh_actions/split_tox_gh_actions.py
# The template responsible for it is in
# scripts/split_tox_gh_actions/templates/base.jinja
name: Test Cloud
on:
  push:
    branches:
      - master
      - release/**
      - major/**
  pull_request:
# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
permissions:
  contents: read
env:
  BUILD_CACHE_KEY: ${{ github.sha }}
  CACHED_BUILD_PATHS: |
    ${{ github.workspace }}/dist-serverless
jobs:
  test-cloud:
    name: Cloud
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6","3.7","3.8","3.9","3.10","3.11","3.12","3.13","3.14"]
        # python3.6 reached EOL and is no longer being supported on
        # new versions of hosted runners on Github Actions
        # ubuntu-20.04 is the last version that supported python3.6
        # see https://github.com/actions/setup-python/issues/544#issuecomment-1332535877
        os: [ubuntu-22.04]
    services:
      docker:
        image: docker:dind  # Required for Docker network management
        options: --privileged  # Required for Docker-in-Docker operations
    # Use Docker container only for Python 3.6
    container: ${{ matrix.python-version == '3.6' && 'python:3.6' || null }}
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: actions/setup-python@v6
        if: ${{ matrix.python-version != '3.6' }}
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: Setup Test Env
        run: |
          pip install "coverage[toml]" tox
      - name: Erase coverage
        run: |
          coverage erase
      - name: Test aws_lambda
        run: |
          set -x # print commands that are executed
          ./scripts/runtox.sh "py${{ matrix.python-version }}-aws_lambda"
      - name: Test boto3
        run: |
          set -x # print commands that are executed
          ./scripts/runtox.sh "py${{ matrix.python-version }}-boto3"
      - name: Test chalice
        run: |
          set -x # print commands that are executed
          ./scripts/runtox.sh "py${{ matrix.python-version }}-chalice"
      - name: Test cloud_resource_context
        run: |
          set -x # print commands that are executed
          ./scripts/runtox.sh "py${{ matrix.python-version }}-cloud_resource_context"
      - name: Test gcp
        run: |
          set -x # print commands that are executed
          ./scripts/runtox.sh "py${{ matrix.python-version }}-gcp"
      - name: Generate coverage XML (Python 3.6)
        if: ${{ !cancelled() && matrix.python-version == '3.6' }}
        run: |
          export COVERAGE_RCFILE=.coveragerc36
          coverage combine .coverage-sentry-*
          coverage xml --ignore-errors
      - name: Generate coverage XML
        if: ${{ !cancelled() && matrix.python-version != '3.6' }}
        run: |
          coverage combine .coverage-sentry-*
          coverage xml
      - name: Upload coverage to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          # make sure no plugins alter our coverage reports
          plugins: noop
          verbose: true
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: .junitxml
          verbose: true
  check_required_tests:
    name: All Cloud tests passed
    needs: test-cloud
    # Always run this, even if a dependent job failed
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - name: Check for failures
        if: needs.test-cloud.result != 'success'
        run: |
          echo "One of the dependent jobs has failed. You may need to re-run it." && exit 1
