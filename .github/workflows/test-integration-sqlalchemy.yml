name: Test sqlalchemy

on:
  push:
    branches:
      - master
      - release/**

  pull_request:

permissions:
  contents: read

env:
  BUILD_CACHE_KEY: ${{ github.sha }}
  CACHED_BUILD_PATHS: |
    ${{ github.workspace }}/dist-serverless

jobs:
  test:
    name: python ${{ matrix.python-version }}, sqlalchemy ${{ matrix.sqlalchemy-versions }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    continue-on-error: true
    strategy:
      matrix:
        python-version: ["2.7"]
        sqlalchemy-versions: ["1.2,1.3"]
        os: [ubuntu-latest]
        include:
          - { python-version: "3.7", sqlalchemy-versions: "1.2,1.3", os: "ubuntu-latest" }
          - { python-version: "3.8", sqlalchemy-versions: "1.2,1.3", os: "ubuntu-latest" }
          - { python-version: "3.9", sqlalchemy-versions: "1.2,1.3", os: "ubuntu-latest" }
          - { python-version: "3.10", sqlalchemy-versions: "1.2,1.3", os: "ubuntu-latest" }

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Test Env
        env:
          PGHOST: localhost
          PGPASSWORD: sentry
        run: |
          pip install codecov tox

      - name: Test sqlalchemy
        env:
          CI_PYTHON_VERSION: ${{ matrix.python-version }}
        timeout-minutes: 45
        shell: bash
        run: |
          set -x # print commands that are executed
          coverage erase

          # create ram drive to run tests in
          mkdir -p ~/toxworkdir
          sudo mount -o size=180m -t tmpfs none ~/toxworkdir

          envname=$(python ./scripts/tox_env_name.py ${{ matrix.python-version }} sqlalchemy
          ./scripts/runtox.sh "$envname" --cov=tests --cov=sentry_sdk --cov-report= --cov-branch
          coverage combine .coverage*
          coverage xml -i
          codecov --file coverage.xml