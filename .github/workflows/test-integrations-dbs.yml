# Do not edit this YAML file. This file is generated automatically by executing
# python scripts/split_tox_gh_actions/split_tox_gh_actions.py
# The template responsible for it is in
# scripts/split_tox_gh_actions/templates/base.jinja
name: Test DBs
on:
  push:
    branches:
      - master
      - release/**
      - potel-base
  pull_request:
# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
permissions:
  contents: read
env:
  BUILD_CACHE_KEY: ${{ github.sha }}
  CACHED_BUILD_PATHS: |
    ${{ github.workspace }}/dist-serverless
jobs:
  test-dbs-latest:
    name: DBs (latest)
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        # python3.6 reached EOL and is no longer being supported on
        # new versions of hosted runners on Github Actions
        # ubuntu-20.04 is the last version that supported python3.6
        # see https://github.com/actions/setup-python/issues/544#issuecomment-1332535877
        os: [ubuntu-20.04]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: sentry
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # Maps tcp port 5432 on service container to the host
        ports:
          - 5432:5432
    env:
      SENTRY_PYTHON_TEST_POSTGRES_HOST: localhost
      SENTRY_PYTHON_TEST_POSTGRES_USER: postgres
      SENTRY_PYTHON_TEST_POSTGRES_PASSWORD: sentry
      CLICKHOUSE_DATABASE: demo
      CLICKHOUSE_USER: demo
      CLICKHOUSE_PASSWORD: demo
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: "Setup ClickHouse Server"
        id: clickhouse-server          
        uses: getsentry/action-clickhouse-in-ci@v1.2
      - name: Check Clickhouse Setup
        run: |
          set -x
          docker ps
          curl -i 'http://localhost:8123/' --data-binary 'SELECT 1'  
      - name: Setup Test Env
        run: |
          pip install "coverage[toml]" tox
      - name: Test clickhouse_driver latest
        run: |
          set -x # print commands that are executed
          ./scripts/runtox.sh "py${{ matrix.python-version }}-clickhouse_driver-latest"
