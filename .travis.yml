language: python

python:
  - "2.7"
  - "pypy"
  - "3.4"
  - "3.5"
  - "3.6"

env:
  global:
    - SENTRY_PYTHON_TEST_POSTGRES_USER=postgres
    - SENTRY_PYTHON_TEST_POSTGRES_NAME=travis_ci_test

cache:
  pip: true
  cargo: true

branches:
  only:
    - master
    - /^release\/.+$/

matrix:
  include:
    - python: "3.7"
      dist: xenial

    - python: "3.8"
      dist: xenial

    - python: "3.8"
      name: "Python 3.8 (Conda)"
      env: USE_CONDA=true
      dist: xenial

    - python: "2.7"
      name: "Python 2.7 (Conda)"
      env: USE_CONDA=true
      dist: xenial

    - name: Linting
      python: "3.6"
      install:
        - pip install tox
      script: tox -e linters

    - python: "3.6"
      name: Distribution packages
      install: []
      script: make travis-upload-dist

    - python: "3.6"
      name: Build documentation
      install: []
      script: make travis-upload-docs

before_script:
  - psql -c 'create database travis_ci_test;' -U postgres
  - psql -c 'create database test_travis_ci_test;' -U postgres

services:
  - postgresql

install:
  - |-
    if [[ "$USE_CONDA" = "true" ]]; then
      sudo apt-get update
      # We do this conditionally because it saves us some downloading if the version is the same.
      if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi
      bash miniconda.sh -b -p $HOME/miniconda
      source "$HOME/miniconda/etc/profile.d/conda.sh"
      hash -r
      conda config --set always_yes yes --set changeps1 no
      conda update -q conda
      Useful for debugging any issues with conda
      conda info -a

      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION tox codecov
      conda activate test-environment
    else
      pip install tox codecov
    fi
  - make install-zeus-cli
  - bash scripts/download-relay.sh

script:
  - coverage erase
  - ./scripts/runtox.sh '' --cov=tests --cov=sentry_sdk --cov-report= --cov-branch
  - coverage combine .coverage*
  - coverage xml -i
  - codecov --file coverage.xml
  - '[[ -z "$ZEUS_API_TOKEN" ]] || zeus upload -t "application/x-cobertura+xml" coverage.xml'

notifications:
  webhooks:
    urls:
      - https://zeus.ci/hooks/7ebb3060-90d8-11e8-aa04-0a580a282e07/public/provider/travis/webhook
    on_success: always
    on_failure: always
    on_start: always
    on_cancel: always
    on_error: always
